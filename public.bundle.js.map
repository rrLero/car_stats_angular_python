{"version":3,"sources":["webpack:///webpack/bootstrap ff476f000ace5cea079d","webpack:///./app.module.js","webpack:///./src/carStats.module.js","webpack:///./src/public/public.module.js","webpack:///./src/common/common.module.js","webpack:///./src/public/public.routes.js","webpack:///./src/admin/login/login.controller.js","webpack:///./src/admin/login/log-out.component.js","webpack:///./src/admin/login/current-user.service.js","webpack:///./src/common/loading/tokenHttpInterceptor.js","webpack:///./src/common/loading/loading.interceptor.js","webpack:///./src/common/loading/loading.component.js","webpack:///./src/public/noteInList/notes.controller.js","webpack:///./src/public/noteInList/oneCarNote.controller.js","webpack:///./src/public/noteInList/editNote.controller.js","webpack:///./src/public/noteInList/addnote.controller.js","webpack:///./src/public/carInList/cars.controller.js","webpack:///./src/public/carInList/EditCarController.js","webpack:///./src/public/carInList/addCarController.js","webpack:///./src/common/notesListService.js","webpack:///./src/common/carsListService.js","webpack:///./src/admin/services/login.service.js","webpack:///./src/admin/services/current-user.service.js","webpack:///./src/admin/services/authredirector.service.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC5DA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yB;;;;;;;AC3BA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC,I;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACbD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACXD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,O;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,I;;;;;;;ACzGD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC,I;;;;;;;AC/CD;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,8B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACpBD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACvCD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb,0C;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;AC/CD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAiD,SAAS;AAC1D;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,iDAAiD,UAAU;AAC3D;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,iDAAiD,UAAU;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;AC/CD;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;AC3BD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,kB;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,G;AACA;AACA;AACA;AACA;AACA,mC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,I;;;;;;;ACjCD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,mC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,I;;;;;;;ACnCD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,8D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,I;;;;;;;ACjCD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kB;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACzBD;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,wB;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;AACA;AACA,CAAC,I;;;;;;;ACzBD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;AC1BD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,e;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;ACnBD;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC,I;;;;;;;ACjED;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC,I;;;;;;;ACzCD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;;;;;;;ACrCD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AC1BD;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,CAAC","file":"public.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 111);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ff476f000ace5cea079d","\nrequire('./src/carStats.module.js');\nrequire('./src/public/public.module.js');\nrequire('./src/common/common.module.js');\nrequire('./src/public/public.routes.js');\n\nrequire('./src/admin/login/login.controller.js');\nrequire('./src/admin/login/log-out.component.js');\nrequire('./src/admin/login/current-user.service.js');\n\nrequire('./src/common/loading/tokenHttpInterceptor.js');\nrequire('./src/common/loading/loading.interceptor.js');\nrequire('./src/common/loading/loading.component.js');\n\nrequire('./src/public/noteInList/notes.controller.js');\nrequire('./src/public/noteInList/oneCarNote.controller.js');\nrequire('./src/public/noteInList/editNote.controller.js');\nrequire('./src/public/noteInList/addnote.controller.js');\n\nrequire('./src/public/carInList/cars.controller.js');\nrequire('./src/public/carInList/EditCarController.js');\nrequire('./src/public/carInList/addCarController.js');\n\nrequire('./src/common/notesListService.js');\nrequire('./src/common/carsListService.js');\nrequire('./src/admin/services/login.service.js');\nrequire('./src/admin/services/current-user.service.js');\nrequire('./src/admin/services/authredirector.service.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.module.js\n// module id = 111\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n\r\n/**\r\n * Restaurant module that includes the public module as a dependency\r\n */\r\nangular.module('carStats', ['public'])\r\n.config(config);\r\n\r\nconfig.$inject = ['$urlRouterProvider'];\r\nfunction config($urlRouterProvider) {\r\n\r\n  // If user goes to a path that doesn't exist, redirect to public root\r\n  $urlRouterProvider.otherwise('/');\r\n}\r\n\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/carStats.module.js\n// module id = 112\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n/**\r\n * Public carStats application. Includes the common module and ui-router.\r\n */\r\nangular.module('public', ['ui.router', 'common', 'ngCookies'])\r\n.run(run);\r\n\r\nrun.$inject = ['$rootScope', 'AuthRedirectorService']\r\nfunction run($rootScope, AuthRedirectorService) {\r\n  // Apply auth rules when state changes\r\n  $rootScope.$on('$stateChangeStart', AuthRedirectorService.onStateChangeStart);\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/public.module.js\n// module id = 113\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('common', [])\r\n.config(config)\r\n.constant('ApiPath', 'https://floating-scrubland-23282.herokuapp.com');\r\n\r\nconfig.$inject = ['$httpProvider'];\r\nfunction config($httpProvider) {\r\n\t$httpProvider.interceptors.push('loadingHttpInterceptor');\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/common.module.js\n// module id = 114\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.config(routeConfig);\r\n\r\n/**\r\n * Configures the routes and views\r\n */\r\nrouteConfig.$inject = ['$stateProvider'];\r\nfunction routeConfig ($stateProvider) {\r\n  // Routes\r\n  $stateProvider\r\n    .state('public', {\r\n      abstract: true,\r\n      templateUrl: 'src/public/public.html',     \r\n    })\r\n    .state('public.home', {\r\n      url: '/',\r\n      templateUrl: 'src/public/home/home.html'\r\n    })\r\n    .state('public.carsList', {\r\n      url: '/carsList',\r\n      templateUrl: 'src/public/carInList/car-in-list.html',\r\n      controller: 'CarsController',\r\n      controllerAs: 'carsCtrl',\r\n    })\r\n    .state('public.notesList', {\r\n      url: '/notesList',\r\n      templateUrl: 'src/public/noteInList/note-in-list.html',\r\n      controller: 'NotesController',\r\n      controllerAs: 'notesCtrl',\r\n    })\r\n    .state('public.oneCarNotes', {\r\n      url: '/carsList/{id}/notes',\r\n      templateUrl: 'src/public/noteInList/one-car-note.html',\r\n      controller: \"OneCarNoteController\",\r\n      controllerAs: 'noteCtrl',\r\n      resolve: {\r\n        notes: ['notesListService', '$stateParams', function (notesListService, $stateParams) {\r\n          return notesListService.getOneCarNote($stateParams.id)\r\n        }],\r\n        cars: ['carsListService', '$stateParams', function (carsListService, $stateParams) {\r\n          return carsListService.getCarsList()\r\n        }],\r\n        id: ['$stateParams', function ($stateParams) {\r\n          return $stateParams.id\r\n        }]\r\n      }\r\n    })\r\n    .state('public.addCar', {\r\n      url: '/addCar',\r\n      templateUrl: 'src/public/carInList/addCar.html',\r\n      controller: 'AddCarController',\r\n      controllerAs: 'car',\r\n    })\r\n    .state('public.addNotes', {\r\n      url: '/addNote',\r\n      templateUrl: 'src/public/noteInList/addNote.html',\r\n      controller: 'AddNoteController',\r\n      controllerAs: 'note',\r\n      resolve: {\r\n        cars: ['carsListService', function (carsListService) {\r\n          return carsListService.getCarsList()\r\n        }]\r\n      }\r\n    })\r\n    .state('public.editCar', {\r\n      url: '/editCar/{id}',\r\n      templateUrl: 'src/public/carInList/editCar.html',\r\n      controller: 'EditCarController',\r\n      controllerAs: 'car',\r\n      resolve: {\r\n        cars: ['carsListService', function (carsListService) {\r\n          return carsListService.getCarsList()\r\n        }],\r\n        id: ['$stateParams', function ($stateParams) {\r\n          return $stateParams.id\r\n        }]\r\n      }\r\n    })\r\n    .state('public.editNotes', {\r\n      url: '/editNotes/{id}',\r\n      templateUrl: 'src/public/noteInList/editNotes.html',\r\n      controller: 'EditNoteController',\r\n      controllerAs: 'note',\r\n      resolve: {\r\n        notes: ['notesListService', function (notesListService) {\r\n          return notesListService.getNotesList()\r\n        }],\r\n        id: ['$stateParams', function ($stateParams) {\r\n          return $stateParams.id\r\n        }],\r\n        cars: ['carsListService', function (carsListService) {\r\n          return carsListService.getCarsList()\r\n        }]\r\n      }      \r\n    })\r\n    .state('public.login', {\r\n      url: '/login',\r\n      templateUrl: 'src/admin/login/login.html',\r\n      controller: 'LoginController',\r\n      controllerAs: '$ctrl',\r\n    })\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/public.routes.js\n// module id = 115\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('LoginController', LoginController);\r\n\r\nLoginController.$inject = ['$state', 'LoginService', 'CurrentUserService', '$rootScope', '$cookies'];\r\nfunction LoginController($state, LoginService, CurrentUserService, $rootScope, $cookies) {\r\n  var $ctrl = this;\r\n  $ctrl.username = '';\r\n  $ctrl.password = '';\r\n  $ctrl.error = '';\r\n  $ctrl.message = '';\r\n\r\n  /**\r\n   * Handles when user clicks the login button.\r\n   */\r\n  $ctrl.login = function() {\r\n    LoginService.getAccessToken($ctrl.username, $ctrl.password).then(function(accessToken) {\r\n          // If user went directly to login page, redirect to admin home\r\n      if(!$state.params || !$state.params.toState) {\r\n        var now = new Date();\r\n        now.setDate(now.getDate()+7);\r\n        $cookies.put('token', accessToken, [{expires:now, path: '/'}]);\r\n        $state.go('public.home');\r\n      }\r\n      else {\r\n        $state.go($state.params.toState.name, $state.params.toParams);\r\n      }\r\n    }, function(response) {\r\n      // Login failed\r\n      $ctrl.error = response.data.message;\r\n    });\r\n  };\r\n\r\n\r\n  $ctrl.valid = function() {\r\n    return ($ctrl.username !== '' && $ctrl.password !== '');\r\n  };\r\n\r\n  $ctrl.createUser = function() {\r\n    LoginService.createUser($ctrl.username, $ctrl.password)\r\n                .then(function(response) {\r\n                  $ctrl.message = response;\r\n                })\r\n  }\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/login/login.controller.js\n// module id = 116\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.component('logout', {\r\n\ttemplateUrl: 'src/admin/login/logout.html',\r\n\tcontroller: LogOutController,\r\n});\r\n\r\nLogOutController.$inject = ['$cookies', '$state', '$location','CurrentUserService'];\r\nfunction LogOutController($cookies, $state, $location, CurrentUserService) {\r\n\tvar $ctrl = this;\r\n\t$ctrl.logOut = function() {\r\n\t\t$cookies.remove('token');\r\n\t    $location.path('/login'); \r\n\t}\r\n\t$ctrl.isAuth = function() {\r\n\t\treturn Boolean(CurrentUserService.isAuthenticated())\r\n\t}\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/login/log-out.component.js\n// module id = 117\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.service('CurrentUserService', CurrentUserService);\r\n\r\n/**\r\n * Used to store and track information about the currently logged in user.\r\n * This is intended to be injected any time we need some user metadata\r\n * or to find out if the user is authenticated.\r\n **/\r\nfunction CurrentUserService() {\r\n  var service = this;\r\n  var _username = '';\r\n  var _accessToken = '';\r\n\r\n  /**\r\n   * Load the current user with username and token\r\n   */\r\n  service.saveToken = function(username, token) {\r\n    _username = username;\r\n    _accessToken = token;\r\n  };\r\n\r\n\r\n  service.getUsername = function() {\r\n    return _username;\r\n  };\r\n\r\n\r\n  service.getAccessToken = function() {\r\n    return _accessToken;\r\n  };\r\n\r\n\r\n  service.isAuthenticated = function() {\r\n    return _accessToken !== '';\r\n  };\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/login/current-user.service.js\n// module id = 118\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n\r\n//Create a http interceptor factory\r\nfunction accessTokenHttpInterceptor($cookies) {\r\n    return {\r\n        //For each request the interceptor will set the bearer token header.\r\n        request: function($config) {\r\n            //Fetch token from cookie\r\n            var token=$cookies.get('token');\r\n            //set authorization header\r\n            if (!$config.params) {\r\n                $config.params = {'token': token}\r\n            } else {\r\n               $config.params.token=token; \r\n            }\r\n            \r\n            return $config;\r\n        },\r\n        response: function(response) {\r\n            //if you get a token back in your response you can use \r\n            //the response interceptor to update the token in the \r\n            //stored in the cookie\r\n            if (response.data.token) {\r\n                  //fetch token\r\n                  var token=response.data.token;\r\n                  //set token\r\n                  $cookies.put('token', token);\r\n            }\r\n            return response;\r\n        }\r\n    };\r\n}\r\naccessTokenHttpInterceptor.$inject=['$cookies'];\r\n\r\n//Register the http interceptor to angular config.\r\nfunction httpInterceptorRegistry($httpProvider) {\r\n    $httpProvider.interceptors.push('accessTokenHttpInterceptor');\r\n}\r\nhttpInterceptorRegistry.$inject=['$httpProvider'];\r\n\r\n//Assign to module\r\nangular\r\n    .module('common')\r\n    .config(httpInterceptorRegistry)\r\n    .factory('accessTokenHttpInterceptor', accessTokenHttpInterceptor)\r\n\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/loading/tokenHttpInterceptor.js\n// module id = 119\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n\r\nangular.module('common')\r\n.factory('loadingHttpInterceptor', LoadingHttpInterceptor);\r\n\r\nLoadingHttpInterceptor.$inject = ['$rootScope', '$q'];\r\n/**\r\n * Tracks when a request begins and finishes. When a\r\n * request starts, a progress event is emitted to allow\r\n * listeners to determine when a request has been initiated.\r\n * When the response completes or a response error occurs,\r\n * we assume the request has ended and emit a finish event.\r\n */\r\nfunction LoadingHttpInterceptor($rootScope, $q) {\r\n\r\n  var loadingCount = 0;\r\n  var loadingEventName = 'spinner:activate';\r\n\r\n  return {\r\n    request: function (config) {\r\n\r\n      if (++loadingCount === 1) {\r\n        $rootScope.$broadcast(loadingEventName, {on: true});\r\n      }\r\n\r\n      return config;\r\n    },\r\n\r\n    response: function (response) {\r\n      if (--loadingCount === 0) {\r\n        $rootScope.$broadcast(loadingEventName, {on: false});\r\n      }\r\n\r\n      return response;\r\n    },\r\n\r\n    responseError: function (response) {\r\n      if (--loadingCount === 0) {\r\n        $rootScope.$broadcast(loadingEventName, {on: false});\r\n      }\r\n\r\n      return $q.reject(response);\r\n    }\r\n  };\r\n}\r\n\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/loading/loading.interceptor.js\n// module id = 120\n// module chunks = 1","module.exports = (function () {\r\n\"use strict\";\r\n\r\nangular.module('common')\r\n.component('loading', {\r\n\ttemplate: '<img src=\"images/spinner.svg\" ng-if=\"$ctrl.show\">',\r\n\tcontroller: LoadingController\r\n});\r\n\r\nLoadingController.$inject = ['$rootScope'];\r\nfunction LoadingController($rootScope) {\r\n\tvar $ctrl = this;\r\n\tvar listener;\r\n\r\n\t$ctrl.$onInit = function () {\r\n\t\t$ctrl.show = false;\r\n\t\tlistener = $rootScope.$on('spinner:activate', onSpinnerActivate);\r\n\t};\r\n\r\n\t$ctrl.onDestroy = function () {\r\n\t\tlistener();\r\n\t};\r\n\r\n\tfunction onSpinnerActivate(event, data) {\r\n\t\t$ctrl.show = data.on;\r\n\t}\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/loading/loading.component.js\n// module id = 121\n// module chunks = 1","module.exports = (function () {\r\n\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('NotesController', NotesController);\r\n\r\nNotesController.$inject = ['notesListService'];\r\nfunction NotesController(notesListService, title) {\r\n\tvar $ctrl = this;\t\r\n\r\n\tnotesListService.getNotesList().then(function (response) {\r\n\t\t$ctrl.notes = response;\r\n\t});\r\n\r\n\t$ctrl.onRemove = function (idNote, index) {\r\n\t\tvar result = confirm('Are You Sure All Data Will Be Erased');\r\n\t\tif (result) {\r\n\t\t\tnotesListService.removeNote(idNote);\r\n\t\t$ctrl.notes.notes.splice(index, 1)\r\n\t\t}\t\t\r\n\t};\r\n\t$ctrl.editNote = function (note) {\r\n\t\tnotesListService.sendNoteToEditView(note)\r\n\t};\r\n\t$ctrl.reFormat = function (date) {\t\r\n\t\tvar date2 = new Date();\r\n\t\tvar dif = date2.getTimezoneOffset()*60;\r\n\t\tdate2 = Date.parse(date) + dif;\r\n\t\treturn new Date(date2)\r\n\t}\r\n}\r\n\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/noteInList/notes.controller.js\n// module id = 122\n// module chunks = 1","module.exports = (function () {\r\n\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('OneCarNoteController', OneCarNoteController)\r\n\r\nOneCarNoteController.$inject = ['notes', 'notesListService', 'cars', 'id'];\r\nfunction OneCarNoteController(notes, notesListService, cars, id) {\r\n\tvar $ctrl = this;\r\n\tvar dif = (new Date).getTimezoneOffset()*60;\r\n\t$ctrl.cars = cars.filter(function (car) {\r\n\t\treturn car.id == id\r\n\t})[0];\r\n\t$ctrl.notes = notes;\r\n\t$ctrl.date_to = new Date;\r\n\t$ctrl.date_from = new Date;\r\n\t$ctrl.date_from.setDate($ctrl.date_from.getDate() -30);\r\n\r\n\t$ctrl.getNotesByDate = function (carId, date_to, date_from) {\r\n\t\tdate_to.setHours(23,59,59);\r\n\t\tdate_from.setHours(dif/3600, 0, 0, 0);\r\n\t\tnotesListService.getOneCarNote(carId, date_to.getTime()/1000-dif, date_from.getTime()/1000+dif)\r\n\t\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\t\t$ctrl.notes=response\r\n\t\t\t\t\t\t})\r\n\t};\r\n\t$ctrl.reFormat = function (date) {\t\r\n\t\tvar date2 = new Date();\r\n\t\tvar dif = date2.getTimezoneOffset()*60;\r\n\t\tdate2 = Date.parse(date) + dif;\r\n\t\treturn new Date(date2)\r\n\t}\r\n}\r\n\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/noteInList/oneCarNote.controller.js\n// module id = 123\n// module chunks = 1","module.exports = (function () {\r\n\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('EditNoteController', EditNoteController)\r\n\r\nEditNoteController.$inject = ['notesListService', 'notes', 'id', 'cars']\r\nfunction EditNoteController(notesListService, notes, id, cars) {\r\n\tvar note = this;\r\n\tvar updatedNote;\r\n\tvar dif = (new Date).getTimezoneOffset()*60;\r\n\tnotes=notes.notes.filter(function (elem) {\r\n\t\treturn elem.id == id\r\n\t})[0];\r\n\tnote.cars = notesListService.arrayModify(cars, notes.car.id);\t\r\n\tnote.date = new Date(notes.date);\r\n\tnote.car = note.cars[0];\r\n\tnote.km = notes.km;\r\n\tnote.pays = notes.pays;\r\n\tnote.works = notes.works;\r\n\tnote.submit = function () {\r\n\t\tnote.date.setHours(12,0,0,0);\r\n\t\tupdatedNote = {\r\n\t\t'km': note.km, \r\n\t\t'date': note.date.getTime()/1000-dif,         \r\n        'works': note.works, \r\n        'pays': note.pays\r\n\t\t };\r\n\t\t notesListService.editNote(updatedNote, id);\r\n\t};\r\n\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/noteInList/editNote.controller.js\n// module id = 124\n// module chunks = 1","module.exports = (function () {\r\n\r\n\"use strict\";\r\n\r\nangular.module('public')\r\n.controller('AddNoteController', AddNoteController);\r\n\r\nAddNoteController.$inject = ['notesListService', '$location', 'cars']\r\nfunction AddNoteController(notesListService, $location, cars) {\r\n  var dif = (new Date).getTimezoneOffset()*60;\r\n  var note = this;  \r\n  var newNote = {};\r\n  note.car_type = cars;\r\n  note.date = new Date();  \r\n  note.submit = function () {\r\n     note.date.setHours(12,0,0,0);\r\n     newNote = {\r\n        'date': note.date.getTime()/1000-dif, \r\n        'km': note.km, \r\n        'works': note.works, \r\n        'pays': note.pays || null\r\n      };\r\n     notesListService.addNewNote(newNote, note.car);\r\n  };\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/noteInList/addnote.controller.js\n// module id = 125\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('CarsController', CarsController);\r\n\r\n\r\nCarsController.$inject = ['carsListService', '$log'];\r\nfunction CarsController(carsListService, $log) {\r\n\t\r\n\tvar $ctrl = this;\r\n\r\n\tcarsListService.getCarsList().then(function(response) {\r\n\t\t$ctrl.car2 = response;\t\r\n\t});\r\n\t\r\n\t$ctrl.onRemove2 = function(idCar, index) {\r\n\t\tvar result = confirm('Are You Sure All Data Will Be Erased');\r\n\t\t$log.log(result);\r\n\t\tif (result) {\r\n\t\t\tcarsListService.removeCar(idCar);\r\n\t\t\t$ctrl.car2.splice(index, 1)\r\n\t\t}\r\n\t} \r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/carInList/cars.controller.js\n// module id = 126\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('EditCarController', EditCarController);\r\n\r\nEditCarController.$inject = ['carsListService', 'cars', 'id'];\r\nfunction EditCarController(carsListService, cars, id) {\r\n\tvar car = this;\r\n\tvar updatedCar;\r\n\tcars = cars.filter(function(elem) {\r\n\t\treturn elem.id == id\r\n\t\t});\r\n\tcar.gov_number = cars[0].gov_number;\r\n\tcar.car_type = cars[0].car_type;\r\n\tcar.gov_number_trailer = cars[0].gov_number_trailer;\r\n\r\n\tcar.submit = function() {\r\n\t\tupdatedCar = {\r\n\t\t'gov_number': car.gov_number, \r\n\t\t\t'car_type': car.car_type, \r\n\t\t\t'gov_number_trailer': car.gov_number_trailer\r\n\t\t };\r\n\t\t carsListService.editCar(updatedCar, cars[0].id);\r\n\t};\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/carInList/EditCarController.js\n// module id = 127\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('public')\r\n.controller('AddCarController', AddCarController);\r\n\r\nAddCarController.$inject = ['carsListService', '$location'];\r\nfunction AddCarController(carsListService, $location) {\r\n  var car = this;\r\n  var newCar = {};\r\n  car.submit = function() {\r\n     newCar = {\t\r\n     \t'gov_number': car.gov_number, \r\n     \t'car_type': car.car_type, \r\n     \t'gov_number_trailer': car.gov_number_trailer\r\n     };\r\n     carsListService.addNewCar(newCar);\r\n  };\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/carInList/addCarController.js\n// module id = 128\n// module chunks = 1","module.exports = (function () {\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('common')\r\n.service('notesListService', notesListService);\r\n\r\nnotesListService.$inject = ['$http', 'ApiPath', '$location'];\r\nfunction notesListService($http, ApiPath, $location) {\r\n\tvar service = this;\r\n\tvar dif = (new Date).getTimezoneOffset()*60;\r\n\r\n\tservice.getNotesList = function () {\r\n\t\treturn $http.get(ApiPath + '/notes').then(function (response) {\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t};\r\n\r\n\tservice.removeNote = function (idNote) {\r\n\t\treturn $http.delete(ApiPath + '/notes/' + idNote)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tconsole.log(response.data.message);\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\t\t\t\r\n\t};\r\n\r\n\tservice.getOneCarNote = function (carId, date_to, date_from) {\r\n\t\tdate_from = date_from || Date.now()/1000-2592000;\r\n\t\tdate_to = date_to || new Date()/1000+86400;\r\n\t\tvar config = {};\r\n\t\tconfig.params = {\r\n\t\t\t'date_to': date_to,\r\n\t\t\t'date_from': date_from\r\n\t\t\t};\r\n\t\treturn $http.get(ApiPath + '/notes/' + carId, config)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n\tservice.addNewNote = function (json, carId) {\r\n\t\treturn $http.post(ApiPath + '/notes/'+ carId, json)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tconsole.log(response.data.message);\r\n\t\t\t\t\t\t$location.url('/notesList');\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n\tservice.arrayModify = function (array, id) {\r\n\t\tlet index = array.findIndex(function (elem) {\r\n\t\t\treturn elem.id == id\r\n\t\t\t});\r\n\t\tvar element = array.splice(index,1);\r\n\t\tarray.unshift(element[0]);\t\r\n\t\treturn array\r\n\t};\r\n\tservice.editNote = function (json, id) {\r\n\t\treturn $http.put(ApiPath + '/notes/' + id, json)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tconsole.log(response.data.message);\r\n\t\t\t\t\t\t$location.url('/notesList');\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/notesListService.js\n// module id = 129\n// module chunks = 1","module.exports = (function() {\r\n'use strict';\r\n\r\nangular.module('common')\r\n.service('carsListService', carsListService);\r\n\r\n\r\ncarsListService.$inject = ['$http', 'ApiPath', '$location', '$log'];\r\nfunction carsListService($http, ApiPath, $location, $log) {\r\n\tvar service = this;\r\n\r\n\tservice.getCarsList = function() {\r\n\t\treturn $http.get(ApiPath + '/car').then(function(response) {\r\n\t\t\treturn response.data\r\n\t\t})\r\n\t};\r\n\r\n\tservice.removeCar = function(idCar) {\r\n\t\treturn $http.delete(ApiPath + '/car/' + idCar)\r\n\t\t\t\t\t.then(function(response) {\r\n\t\t\t\t\t\t$log.log(response.data.message);\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n\tservice.addNewCar = function(json) {\r\n\t\treturn $http.post(ApiPath + '/car', json)\r\n\t\t\t\t\t.then(function(response) {\r\n\t\t\t\t\t\t$log.log(response.data.message);\r\n\t\t\t\t\t\t$location.url('/carsList');\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n\tservice.editCar = function(json, id) {\r\n\t\treturn $http.put(ApiPath + '/car/'+ id, json)\r\n\t\t\t\t\t.then(function(response) {\r\n\t\t\t\t\t\t$log.log(response.data.message);\r\n\t\t\t\t\t\t$location.url('/carsList');\r\n\t\t\t\t\t\treturn response.data\r\n\t\t\t\t\t})\r\n\t};\r\n}\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/carsListService.js\n// module id = 130\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n\r\nangular.module('public')\r\n.service('LoginService', LoginService);\r\n\r\nLoginService.$inject = ['$http', 'ApiPath', '$rootScope', '$cookies', '$state'];\r\nfunction LoginService($http, ApiPath, $rootScope, $cookies, $state) {\r\n  var service = this;\r\n  /** Retrieves an access token using a username and password */\r\n  service.getAccessToken = function(username, password) {\r\n    var params = {\r\n      'user_name': username,\r\n      'password': password\r\n    };\r\n\r\n    return $http.post(ApiPath + '/get_token', params).then(function(response) {\r\n      return response.data.token;\r\n    });\r\n  };\r\n  service.getToken = function () {\r\n    var token = $cookies.get('token');\r\n    return token\r\n  };\r\n  service.createUser = function (username, password) {\r\n    var params = {\r\n      'user_name': username,\r\n      'password': password\r\n    };\r\n    return $http.post(ApiPath + '/user', params)\r\n                .then(function (response) {\r\n                  return response.data.message\r\n                }, function (resolve) {\r\n                  return resolve.data.message;\r\n                });\r\n  }\r\n}\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/services/login.service.js\n// module id = 131\n// module chunks = 1","module.exports = (function() {\r\n\"use strict\";\r\n\r\nangular.module('public')\r\n.service('CurrentUserService', CurrentUserService);\r\n\r\n/**\r\n * Used to store and track information about the currently logged in user.\r\n * This is intended to be injected any time we need some user metadata\r\n * or to find out if the user is authenticated.\r\n **/\r\nCurrentUserService.$inject=['$cookies'];\r\nfunction CurrentUserService($cookies) {\r\n  var service = this;\r\n  var _username = '';\r\n  var _accessToken = '';\r\n\r\n  /**\r\n   * Load the current user with username and token\r\n   */\r\n\r\n  service.isAuthenticated = function() {\r\n    _accessToken = $cookies.get('token');\r\n    return _accessToken;\r\n  };\r\n}\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/services/current-user.service.js\n// module id = 132\n// module chunks = 1","module.exports = (function () {\r\n\"use strict\";\r\n\r\nangular.module('public')\r\n.service('AuthRedirectorService', AuthRedirectorService);\r\n\r\n\r\nAuthRedirectorService.$inject = ['$state', 'CurrentUserService'];\r\nfunction AuthRedirectorService($state, CurrentUserService) {\r\n  var service = this;\r\n\r\n  /**\r\n   * Processes the logic when a state begins. We ensure that\r\n   * the user is authenticated before letting them proceed\r\n   * to the next page.\r\n   */\r\n  service.onStateChangeStart = function(event, toState, toParams, fromState, fromParams) {\r\n    // Only redirect if going to any admin state,\r\n    // unless going directly to login\r\n    if (toState.name.indexOf('public.') === 0 &&\r\n        toState.name != 'public.login' &&\r\n        !CurrentUserService.isAuthenticated()) {\r\n      event.preventDefault();\r\n      $state.go('public.login', {\r\n        'toState': toState,\r\n        'toParams': toParams\r\n      });\r\n    }\r\n  };\r\n\r\n}\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/services/authredirector.service.js\n// module id = 133\n// module chunks = 1"],"sourceRoot":""}